"""snapshot current schema

Revision ID: a1c3af93b393
Revises: initial
Create Date: 2025-10-03 16:21:35.330067

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "a1c3af93b393"
down_revision: Union[str, Sequence[str], None] = "initial"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "posts",
        sa.Column("title", sa.String(length=100), nullable=False),
        sa.Column("body", sa.Text(), server_default="", nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.add_column(
        "cart_products",
        sa.Column(
            "quantity", sa.Integer(), server_default="1", nullable=False
        ),
    )
    op.create_unique_constraint(
        "idx_unique_cart_product", "cart_products", ["cart_id", "product_id"]
    )
    op.alter_column(
        "carts",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        nullable=False,
        existing_server_default=sa.text("now()"),
    )
    op.drop_constraint(op.f("carts_user_id_fkey"), "carts", type_="foreignkey")
    op.create_foreign_key(None, "carts", "users", ["user_id"], ["id"])
    op.add_column(
        "order_products",
        sa.Column(
            "quantity", sa.Integer(), server_default="1", nullable=False
        ),
    )
    op.create_unique_constraint(
        "idx_unique_order_product",
        "order_products",
        ["order_id", "product_id"],
    )
    op.alter_column(
        "orders",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        nullable=False,
        existing_server_default=sa.text("now()"),
    )
    op.add_column(
        "products", sa.Column("description", sa.String(), nullable=False)
    )
    op.alter_column(
        "products",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        nullable=False,
        existing_server_default=sa.text("now()"),
    )
    op.add_column("profiles", sa.Column("floor", sa.String(), nullable=True))
    op.add_column("profiles", sa.Column("age", sa.Integer(), nullable=True))
    op.add_column(
        "profiles", sa.Column("married", sa.Boolean(), nullable=True)
    )
    op.alter_column(
        "profiles",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        nullable=False,
        existing_server_default=sa.text("now()"),
    )
    op.add_column("users", sa.Column("name", sa.String(), nullable=False))
    op.add_column(
        "users", sa.Column("address", sa.String(length=150), nullable=False)
    )
    op.alter_column(
        "users",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        nullable=False,
        existing_server_default=sa.text("now()"),
    )
    op.drop_constraint(op.f("users_username_key"), "users", type_="unique")
    op.create_unique_constraint(None, "users", ["name"])
    op.drop_column("users", "username")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "users",
        sa.Column(
            "username", sa.VARCHAR(), autoincrement=False, nullable=False
        ),
    )
    op.drop_constraint(None, "users", type_="unique")
    op.create_unique_constraint(
        op.f("users_username_key"),
        "users",
        ["username"],
        postgresql_nulls_not_distinct=False,
    )
    op.alter_column(
        "users",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        nullable=True,
        existing_server_default=sa.text("now()"),
    )
    op.drop_column("users", "address")
    op.drop_column("users", "name")
    op.alter_column(
        "profiles",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        nullable=True,
        existing_server_default=sa.text("now()"),
    )
    op.drop_column("profiles", "married")
    op.drop_column("profiles", "age")
    op.drop_column("profiles", "floor")
    op.alter_column(
        "products",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        nullable=True,
        existing_server_default=sa.text("now()"),
    )
    op.drop_column("products", "description")
    op.alter_column(
        "orders",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        nullable=True,
        existing_server_default=sa.text("now()"),
    )
    op.drop_constraint(
        "idx_unique_order_product", "order_products", type_="unique"
    )
    op.drop_column("order_products", "quantity")
    op.drop_constraint(None, "carts", type_="foreignkey")
    op.create_foreign_key(
        op.f("carts_user_id_fkey"),
        "carts",
        "users",
        ["user_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.alter_column(
        "carts",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        nullable=True,
        existing_server_default=sa.text("now()"),
    )
    op.drop_constraint(
        "idx_unique_cart_product", "cart_products", type_="unique"
    )
    op.drop_column("cart_products", "quantity")
    op.drop_table("posts")
    # ### end Alembic commands ###
